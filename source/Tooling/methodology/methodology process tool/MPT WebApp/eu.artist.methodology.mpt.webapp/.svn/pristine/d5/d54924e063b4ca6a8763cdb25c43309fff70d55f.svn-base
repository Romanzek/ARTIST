package eu.artist.methodology.mpt.webapp.config;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import org.apache.log4j.Logger;

import eu.artist.methodology.mpt.webapp.login.CurrentSession;
import eu.artist.methodology.mpt.webapp.login.LoginBean;
import eu.artist.methodology.mpt.webapp.ruleEngine.RuleEngine;


public class ProjectBean extends LoginBean 

{
	
	private static Logger logger = Logger.getLogger(ProjectBean.class);

	
	private String previewsProject;
	private String selectedProject;

	private String projectName;
	
	
	
	public List<String> get¡vailableProjects(){
		
		String path_to_projects=getMptProperties().getProperty(
				"path_to_reports")
				//+ "\\" + CurrentSession.getUserName() + "\\mat";
				+ File.separator + CurrentSession.getUserName();
		
		File[] files = new File(path_to_projects).listFiles();

		ArrayList<String> projectNames = new ArrayList<String>();

		if (files != null) {

			for (File file : files) {
				if (file.isDirectory()) {
					projectNames.add(file.getName());
				}
			}

		}

		return projectNames;
		
	}
	
	
	
	
	
	
	
	public void createProject(){
		
		FacesContext context2 = FacesContext.getCurrentInstance();

	
			
		
		String path_to_projects=getMptProperties().getProperty(
				"path_to_reports")
				//+ "\\" + CurrentSession.getUserName() + "\\mat";
				+ File.separator + CurrentSession.getUserName() +  File.separator + projectName;
		
		File checkDir = new File(path_to_projects);

		if (!checkDir.exists()) {
			checkDir.mkdirs();
		}

		//selectedProject=projectName;
		//CurrentSession.getSession().setAttribute("defaultProject", getSelectedProject());

		context2.addMessage("null", new FacesMessage("Project Created  is " + getProjectName(), "please select it from the available ones"));
		
		
		
		
		
		
		
	}
	
	

	public void chooseProject (){
		
		FacesContext context = FacesContext.getCurrentInstance();

		if (previewsProject!=getSelectedProject())
		{
		
		CurrentSession.getSession().setAttribute("defaultProject", getSelectedProject());
		context.addMessage("null", new FacesMessage("Project Selected is" + getSelectedProject()));

	RuleEngine.INSTANCE.removeRules();
		}
		
	

	previewsProject=getSelectedProject();


	}
	
	
	
	public boolean isProjectExists(){
		return !get¡vailableProjects().isEmpty();
	}

	public String getSelectedProject() {
		return selectedProject;
	}

	public void setSelectedProject(String selectedProject) {
		this.selectedProject = selectedProject;
	}



	public String getProjectName() {
		return projectName;
	}



	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}







	public String getPreviewsProject() {
		return previewsProject;
	}







	public void setPreviewsProject(String previewsProject) {
		this.previewsProject = previewsProject;
	}
	
	
	

}
