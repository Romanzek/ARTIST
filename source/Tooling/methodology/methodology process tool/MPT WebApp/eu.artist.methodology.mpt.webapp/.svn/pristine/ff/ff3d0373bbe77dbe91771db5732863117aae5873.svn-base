/*******************************************************************************
 *  Copyright (c) 2014 Institute of Communication and Computer Systems (ICCS) - National Technical University of Athens (NTUA)
 *
 *  Licensed under the MIT license:
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sub-license, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 *
 * Contributors: Kleopatra Konstanteli
 * 				 Liagouras Georgios Andreas
 *******************************************************************************/
package rule_api_test

import eu.artist.methodology.mpt.model.MigrationGoals;
import eu.artist.methodology.mpt.model.TechnicalGoals;
import eu.artist.methodology.mpt.model.AnswerList;
import eu.artist.methodology.mpt.model.Answers;
import java.util.ArrayList; 

global eu.artist.methodology.mpt.model.Result result;
global eu.artist.methodology.mpt.model.TestVariable testVariable;
global eu.artist.methodology.mpt.webapp.mat.RulesVariable rulesVariable;
//declare any global variables here




rule "MCRP_1 - new "

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("CR1") , answer.equalsIgnoreCase("NO")) from $answers
 
 then 
   	System.out.println("Rule MCRP_1");
 
  System.out.println("Add all the following activities to your actual process:");
  
  	System.out.println("MCRP.A1 - Define a communication mechanism with the user.");
	System.out.println("MCRP.A2 - Define the appropriate physical and Logical structure for the communication mechanism");
	System.out.println("MCRP.A3 - Registration Communication");
	System.out.println("MCRP.A4 - Initial diagnosis");
	System.out.println("MCRP.A5 - Inform the user");
	System.out.println("MCRP.A6 - Incidence closure"); 
  
  result.setStringResult("Rule MCRP_1");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end



rule "MCRP_4-new"
 
    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("CR1"), answer.equalsIgnoreCase("SI")) from $answers
 
 then 
     	System.out.println("Rule MCRP_4");
 
  System.out.println("Delete MCRP.A1"); 
  
  result.setStringResult("Rule MCRP_4");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "MCRP_5 - new"
 
    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("CR3"), (answer.equalsIgnoreCase("There is a defined process to measure customer satisfaction, but its implementation is not systematic") ) || (answer.equalsIgnoreCase("The customer satisfaction is analyzed, solutions if required are provided and communicate to the user."))) from $answers
 
 then 
     	System.out.println("Rule MCRP_5");
 
  System.out.println("Delete  MCRP.A7"); 
  
  result.setStringResult("Rule MCRP_5");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end




rule "SLAMP_6 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("SLA1"), answer.equalsIgnoreCase("Yes")) from $answers
 
 then 
        	System.out.println("Rule SLAMP_6");
 
  System.out.println("Delete SLAMP.A1 and SLAMP.A2"); 
 
  
  result.setStringResult("Rule SLAMP_6");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "SLAMP_7 - new "

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("SLA3"), answer.equalsIgnoreCase("Yes") ) from $answers
 
 then 
        	System.out.println("Rule SLAMP_7");
 
  System.out.println("Delete SLAMP.A3"); 
 
  
  result.setStringResult("Rule SLAMP_7");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "SLAMP_8 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("SLA4"), answer.equalsIgnoreCase("Yes") ) from $answers
 
 then 
        	System.out.println("Rule SLAMP_8");
 
  System.out.println("Delete SLAMP.A6"); 
 
  
  result.setStringResult("Rule SLAMP_8");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end








rule "UMP_2 new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(answer.equalsIgnoreCase("YES"), (( code.equalsIgnoreCase( "DP4")) || ( code.equalsIgnoreCase("DP6")))) from $answers
 
 then 
            	System.out.println("Rule UMP_2");
 
  System.out.println("Delete UPM"); 
 
  
   
 
  
  result.setStringResult("Rule UMP_2");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end



rule "MP_2 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers( answer.equalsIgnoreCase("Channels to market, sales targets"), code.equalsIgnoreCase( "BS2") ) from $answers
 
 then 
             	System.out.println("Rule MP_2");
 
  System.out.println("Delete MP"); 
 
 
   
 
  
  result.setStringResult("Rule MP_2");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end




rule "T_2_1 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("P1"), (answer.equalsIgnoreCase("Number of total users") ) || (answer.equalsIgnoreCase("Pay as you go") ) || (answer.equalsIgnoreCase("Fixed monthly fee variable fee") )) from $answers
 
 then 
        	System.out.println("Rule T_2_1");
 
  System.out.println("Include EMREQ.A3"); 
 
  
  result.setStringResult("Rule T_2_1");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "T_2_2 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("FM2"), !answer.equalsIgnoreCase("There is no accountability") ) from $answers
 
 then 
       System.out.println("Rule T_2_2");
 
 	 System.out.println("Include EMREQ.A3"); 
 
  
  result.setStringResult("Rule T_2_2");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "T_2_3 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT02"), (answer.equalsIgnoreCase("YES"))) from $answers
 
 then 
        	System.out.println("Rule T_2_3");
 
  System.out.println("Include EMREQ.A4"); 
 
  
  result.setStringResult("Rule T_2_3");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end

rule "T_3 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT04"), (answer.equalsIgnoreCase("GAE"))) from $answers
 
 then 
        	System.out.println("Rule T_3");
 
  System.out.println("Remove TEBENCH, TEMPOP, APAPUP, APACLAS, SCTARGET"); 
 
  
  result.setStringResult("Rule T_3");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end

rule "T_4 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT06"), (answer.equalsIgnoreCase("YES"))) from $answers
 
 then 
        	System.out.println("Rule T_4");
 
  System.out.println("Remove APAPUP, APACLAS"); 
 
  
  result.setStringResult("Rule T_4");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "T_5 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT02"), answer.equalsIgnoreCase("NO")) from $answers
 
 then 
        	System.out.println("Rule T_5");
 
  System.out.println("Remove TEBENCHTEMPOP, APAPUP, APACLAS, SCTARGET (A.2, A.3)"); 
 
  
  result.setStringResult("Rule T_5");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "T_6 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT07"), answer.equalsIgnoreCase("YES")) from $answers
 
 then 
        	System.out.println("Rule T_6");
 
  System.out.println("Remove GSCODE"); 
 
  
  result.setStringResult("Rule T_6");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end

rule "T_7 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT03"), answer.equalsIgnoreCase("Hybrid Cloud")) from $answers
 
 then 
        	System.out.println("Rule T_7");
 
  System.out.println("Remove GSDEP"); 
 
  
  result.setStringResult("Rule T_7");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "T_8 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("OT08"), answer.equalsIgnoreCase("No")) from $answers
 
 then 
        	System.out.println("Rule T_8");
 
  System.out.println("VERBETC optional"); 
 
  
  result.setStringResult("Rule T_8");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end



rule "P03-new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("CR4"), answer.equalsIgnoreCase("YES")) from $answers
  Answers(code.equalsIgnoreCase("CR6"), answer.equalsIgnoreCase("6")) from $answers
 
 then 
        	System.out.println("Rule P03");
 
  System.out.println("Delete IMRP"); 
 
  
  result.setStringResult("Rule P03");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end

rule "P07 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("SLA5"), answer.equalsIgnoreCase("Service levels are monitored regularly")) from $answers
  Answers(code.equalsIgnoreCase("SLA6"), !answer.equalsIgnoreCase("There is no mechanism") ) from $answers
 
 then 
        	System.out.println("Rule P07");
 
  System.out.println("Delete SLAMP.A4 and SLAMP.A5"); 
 
  
  result.setStringResult("Rule P07");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end

rule "P08 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("CP1"), answer.equalsIgnoreCase("YES")) from $answers
  Answers(code.equalsIgnoreCase("CP2"), answer.equalsIgnoreCase("YES")) from $answers
  Answers(code.equalsIgnoreCase("CP3"), answer.equalsIgnoreCase("YES")) from $answers
  
 
 then 
        	System.out.println("Rule P08");
 
  System.out.println("Delete CPMP"); 
 
  
  result.setStringResult("Rule P08");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "P09 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("RA1"), !answer.equalsIgnoreCase("")) from $answers
  Answers(code.equalsIgnoreCase("RA2"), answer.equalsIgnoreCase("To the entire organization the new and modified roles")) from $answers
  Answers(code.equalsIgnoreCase("RA3"), answer.equalsIgnoreCase("Train those people who are going to be assigned to the new or modified roles.")) from $answers
  
 
 then 
        	System.out.println("Rule P09");
 
  System.out.println("Delete OPERATIONAL.A1 and RAP"); 
 
  
  result.setStringResult("Rule P09");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "P10 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("DP2"), answer.equalsIgnoreCase("YES")) from $answers
  
 
 then 
        	System.out.println("Rule P10");
 
  System.out.println("Delete DP"); 
 
  
  result.setStringResult("Rule P10");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B01 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("P1"), !answer.equalsIgnoreCase("No pricing model")) from $answers
  
 
 then 
        	System.out.println("Rule B01");
 
  System.out.println("Include FINANCIAL.A1, FINANCIAL.A2, FINANCIAL.A3, and FINANCIAL.A4"); 
 
  
  result.setStringResult("Rule B01");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end

rule "B02 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("P1"), !answer.equalsIgnoreCase("There is no Business plan") ) from $answers
  
 
 then 
        	System.out.println("Rule B02");
 
  System.out.println("Include OPERATIONAL.A2, OPERATIONA.A3, OPERATIONAL.A5, CPMP, FINANCIAL.A2, FINANCIAL.A3, and FINANCIAL.A4."); 
 
  
  result.setStringResult("Rule B02");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B03 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BS2"), answer.equalsIgnoreCase("The offering of one or more cloud services to customers") ) from $answers
  
 
 then 
        	System.out.println("Rule B03");
 
  System.out.println("Include OPERATIONAL.A3, CPMP and FINANCIAL.A2"); 
 
  
  result.setStringResult("Rule B03");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B04 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BS2"), answer.equalsIgnoreCase("Handling both financial and technical aspects of the services") ) from $answers
  
 
 then 
        	System.out.println("Rule B04");
 
  System.out.println("Include CPMP"); 
 
  
  result.setStringResult("Rule B04");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B05 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BS2"), (answer.equalsIgnoreCase("Target customer set") ) || (answer.equalsIgnoreCase("Channels to market, sales targets") ) || (answer.equalsIgnoreCase("Track the sales and service usage against the plan to ensure that financial targets are achieved for the cloud service provider") )) from $answers
 
 then 
        	System.out.println("Rule B05");
 
  System.out.println("Include VALPRO and CUSTOMER"); 
 
  
  result.setStringResult("Rule B05");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B06 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BS2"), answer.equalsIgnoreCase("Management of contracts and SLAs") ) from $answers
  
 
 then 
        	System.out.println("Rule B06");
 
  System.out.println("Include SLAMP"); 
 
  
  result.setStringResult("Rule B06");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B07 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BS2"), answer.equalsIgnoreCase( "Track the sales and service usage against the plan to ensure that financial targets are achieved for the cloud service provider")) from $answers
  
 
 then 
        	System.out.println("Rule B07");
 
  System.out.println("Include FINANCIAL. A4"); 
 
  
  result.setStringResult("Rule B07");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B08_1 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("PC1"), answer.equalsIgnoreCase("To browse a list of available service offerings which they can purchase") ) from $answers
  
 
 then 
        	System.out.println("Rule B08_1");
 
  System.out.println("Include MP,CUSTOMER.A5."); 
 
  
  result.setStringResult("Rule B08_1");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B08_2 - new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("PC1"), (answer.equalsIgnoreCase("To browse a list of available service offerings which they can purchase")) || (answer.equalsIgnoreCase("Plus a set of capabilities for the management of the content of the catalogue which are available to staff of the cloud service provider")) ) from $answers
  
 
 then 
        	System.out.println("Rule B08_2");
 
  System.out.println("Include MP,CUSTOMER.A5 AND VALPRO"); 
 
  
  result.setStringResult("Rule B08_2");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B09 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BCR1"), (answer.equalsIgnoreCase("Providing the point of contact for the customer for all business matters")) || (answer.equalsIgnoreCase("Providing the point of contact for the customer for all business matters.")) ) from $answers

 
 then 
        	System.out.println("Rule B09");
 
  System.out.println("Include MRCP"); 
 
  
  result.setStringResult("Rule B09");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


rule "B10 -new"

    
when 
  answerList : AnswerList($answers : Answers)  
  Answers(code.equalsIgnoreCase("BCR1"), (answer.equalsIgnoreCase("Processing change requests")) || (answer.equalsIgnoreCase("Providing a channel for any requirements change requests from the customer")) ) from $answers

 
 then 
        	System.out.println("Rule B10");
 
  System.out.println("Include MCRP and IMRP."); 
 
  
  result.setStringResult("Rule B10");
  result.setIntegerResult(new Integer(5));
  result.setBooleanResult(true);
  
 // rulesVariable.addInArray("RULE_3_RETURNS_TRUE");
  
  //testVariable.setTestString("RULE_2_RETURNS_TRUE");

end


