/**
 * generated by Xtext
 */
package eu.artist.postmigration.nfrvt.lang.gel.ui.outline;

import eu.artist.postmigration.nfrvt.lang.common.ui.outline.ARTISTCommonOutlineTreeProvider;
import eu.artist.postmigration.nfrvt.lang.gel.gel.AppliedQualitativePropertyEvaluation;
import eu.artist.postmigration.nfrvt.lang.gel.gel.GelFactory;
import eu.artist.postmigration.nfrvt.lang.gel.gel.GelPackage;
import eu.artist.postmigration.nfrvt.lang.gel.gel.GoalModelEvaluation;
import eu.artist.postmigration.nfrvt.lang.gel.gel.MigrationEvaluation;
import eu.artist.postmigration.nfrvt.lang.gel.gel.Transformation;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
@SuppressWarnings("all")
public class GELOutlineTreeProvider extends ARTISTCommonOutlineTreeProvider {
  protected void _createChildren(final IOutlineNode parentNode, final MigrationEvaluation modelElement) {
    Transformation _createTransformation = GelFactory.eINSTANCE.createTransformation();
    Image __image = this._image(_createTransformation);
    this.createEStructuralFeatureNode(parentNode, modelElement, 
      GelPackage.Literals.MIGRATION_EVALUATION__TRANSFORMATIONS, __image, 
      "Migration", 
      false);
    AppliedQualitativePropertyEvaluation _createAppliedQualitativePropertyEvaluation = GelFactory.eINSTANCE.createAppliedQualitativePropertyEvaluation();
    Image __image_1 = this._image(_createAppliedQualitativePropertyEvaluation);
    this.createEStructuralFeatureNode(parentNode, modelElement, 
      GelPackage.Literals.MIGRATION_EVALUATION__PROPERTY_EVALUATIONS, __image_1, 
      "Applied Property Evaluations", 
      false);
    GoalModelEvaluation _evaluation = modelElement.getEvaluation();
    this.createNode(parentNode, _evaluation);
  }
}
