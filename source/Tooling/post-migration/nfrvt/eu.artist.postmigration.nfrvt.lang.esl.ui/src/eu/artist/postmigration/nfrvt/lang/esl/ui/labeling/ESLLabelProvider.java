/*******************************************************************************
 * Copyright (c) 2014 Vienna University of Technology.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * Martin Fleck (Vienna University of Technology) - initial API and implementation
 *
 * Initially developed in the context of ARTIST EU project www.artist-project.eu
 *******************************************************************************/
/*
* generated by Xtext
*/
package eu.artist.postmigration.nfrvt.lang.esl.ui.labeling;

import com.google.inject.Inject;

import eu.artist.postmigration.nfrvt.lang.common.artistCommon.Expression;
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ImportNamespace;
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ImportURI;
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ImportURIorNamespace;
import eu.artist.postmigration.nfrvt.lang.common.ui.labeling.ARTISTCommonLabelProvider;
import eu.artist.postmigration.nfrvt.lang.esl.esl.EvaluationStrategy;
import eu.artist.postmigration.nfrvt.lang.esl.validation.ESLLabelRenderer;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
public class ESLLabelProvider extends ARTISTCommonLabelProvider {

	private ESLLabelRenderer renderer = new ESLLabelRenderer();
	
	@Inject
	public ESLLabelProvider(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	String text(Expression e) {
		return renderer.render(e);
	}
	
	String text(EvaluationStrategy strategy) {
		return strategy.getLevel().getLiteral() + " > "  + strategy.getName();
	}

	String text(ImportNamespace importNamespace) {
		return renderer.render(importNamespace);
	}
	
	String text(ImportURI importURI) {
		return renderer.render(importURI);
	}
	
	String text(ImportURIorNamespace i) {
		return renderer.render(i);
	}
}
