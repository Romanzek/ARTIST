/*******************************************************************************
 * Copyright (c) 2014 Vienna University of Technology.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * Martin Fleck (Vienna University of Technology) - initial API and implementation
 *
 * Initially developed in the context of ARTIST EU project www.artist-project.eu
 *******************************************************************************/
/**
 * generated by Xtext
 */
package eu.artist.postmigration.nfrvt.lang.nsl.ui.outline;

import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ArtistCommonFactory;
import eu.artist.postmigration.nfrvt.lang.common.artistCommon.ImportURI;
import eu.artist.postmigration.nfrvt.lang.nsl.nsl.NslPackage;
import eu.artist.postmigration.nfrvt.lang.nsl.nsl.Property;
import eu.artist.postmigration.nfrvt.lang.nsl.nsl.PropertyCatalogue;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;
import org.eclipse.xtext.ui.editor.outline.impl.EObjectNode;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
@SuppressWarnings("all")
public class NSLOutlineTreeProvider extends DefaultOutlineTreeProvider {
  protected EObjectNode _createChildren(final DocumentRootNode parentNode, final PropertyCatalogue modelElement) {
    EObjectNode _xblockexpression = null;
    {
      ImportURI _createImportURI = ArtistCommonFactory.eINSTANCE.createImportURI();
      Image __image = this._image(_createImportURI);
      this.createEStructuralFeatureNode(parentNode, modelElement, 
        NslPackage.Literals.PROPERTY_CATALOGUE__IMPORTS, __image, 
        "Import Declarations", 
        false);
      _xblockexpression = this.createEObjectNode(parentNode, modelElement);
    }
    return _xblockexpression;
  }
  
  protected void _createChildren(final IOutlineNode parentNode, final PropertyCatalogue modelElement) {
    EList<Property> _properties = modelElement.getProperties();
    for (final EObject childElement : _properties) {
      this.createNode(parentNode, childElement);
    }
  }
}
